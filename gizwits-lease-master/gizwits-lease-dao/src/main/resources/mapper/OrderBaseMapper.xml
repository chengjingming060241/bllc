<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gizwits.lease.order.dao.OrderBaseDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.gizwits.lease.order.entity.OrderBase">
        <id column="order_no" property="orderNo"/>
        <result column="ctime" property="ctime"/>
        <result column="utime" property="utime"/>
        <result column="sno" property="sno"/>
        <result column="mac" property="mac"/>
        <result column="command" property="command"/>
        <result column="service_mode_detail_id" property="serviceModeDetailId"/>
        <result column="service_mode_id" property="serviceModeId"/>
        <result column="service_mode_name" property="serviceModeName"/>
        <result column="order_status" property="orderStatus"/>
        <result column="pay_time" property="payTime"/>
        <result column="pay_type" property="payType"/>
        <result column="amount" property="amount"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="sys_user_id" property="sysUserId"/>
        <result column="promotion_money" property="promotionMoney"/>

        <result column="early_end" property="earlyEnd"/>
        <result column="early_end_time" property="earlyEndTime"/>

        <result column="service_start_time" property="serviceStartTime"/>
        <result column="service_end_time" property="serviceEndTime"/>

        <result column="abnormal_reason" property="abnormalReason"/>
        <result column="launch_area_id" property="launchAreaId"/>
        <result column="launch_area_name" property="launchAreaName"/>

        <result column="original_price" property="originalPrice"/>
        <result column="card_id" property="cardId"/>
        <result column="card_code" property="cardCode"/>
        <result column="card_discount" property="cardDiscount"/>
        <result column="renew_order_no" property="renewOrderNo"/>

        <result column="tree_path" property="treePath"/>
        <result column="end_type" property="endType"/>
        <result column="refund_result" property="refundResult"/>

    </resultMap>

    <select id="listReadyForShareBenefitOrder" resultMap="BaseResultMap">
        select o.*
        from order_base o, order_status_flow os
        where os.now_status=5 and o.order_status=5 and o.order_no=os.order_no
        <if test="lastExecuteTime != null">
            and os.ctime <![CDATA[ >= ]]> #{lastExecuteTime}
        </if>
        <if test="sno != null and sno != ''">
            and o.sno=#{sno}
        </if>
        group by o.order_no
    </select>


    <select id="findForStatOrder" resultType="map">
        SELECT COUNT(o.`order_no`) as oCount,IFNULL(SUM(IF(o.`pay_time` is not null, o.`amount`, 0)),0) as oAmount
        FROM order_base o,device d
        WHERE o.`sno` = #{sno}
        AND o.`sno` = d.`sno`
        <if test="null !=status and status.size>0">
            AND o.`order_status` IN
            <foreach item="item" index="index" collection="status" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and date_format(o.`ctime`,'%Y-%m-%d') = DATE_FORMAT(#{date},'%Y-%m-%d')
    </select>

    <select id="findByTradeNo" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT * FROM `order_base` where trade_no=#{VALUE,jdbcType=VARCHAR}
	</select>

    <select id="findByUserIdAndStatus" resultMap="BaseResultMap">
		SELECT * FROM `order_base` where user_id=#{userId} and order_status=#{orderStatus}
	</select>

    <select id="findByDeviceIdAndStatus" resultMap="BaseResultMap">
		SELECT * FROM `order_base` WHERE sno=#{deviceId} AND order_status=#{orderStatus} order by utime desc limit 1
	</select>


    <select id="getOrderCount" resultType="int">
        SELECT COUNT(DISTINCT o.`order_no`) FROM device d,order_base o
        WHERE d.`mac` = o.`mac`
        <if test="productId !=null">
            AND d.`product_id` =#{productId}
        </if>
        <choose>
            <when test=" toDate != null">
                and o.ctime <![CDATA[<=]]> #{toDate}
            </when>
            <when test="fromDate != null ">
                and o.ctime <![CDATA[>=]]> #{fromDate}
            </when>

        </choose>
        <if test="null !=status and status.size>0">
            AND o.`order_status` IN
            <foreach item="item" index="index" collection="status" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        AND o.`sys_user_id` = #{sysUserId} and  o.order_status != -1
    </select>


    <resultMap id="listDto" type="com.gizwits.lease.order.dto.OrderBaseListDto">
        <id column="order_no" property="orderNo"/>
        <result column="user_name" property="userName"/>
        <result column="sno" property="sno"/>
        <result column="mac" property="deviceMac"/>
        <result column="launch_area_name" property="deviceLaunchArea"/>
        <result column="amount" property="pay"/>
        <result column="pay_time" property="payTime"/>
        <result column="pay_type" property="payType"/>
        <result column="service_mode_id" property="service_mode_id"/>
        <result column="service_mode_name" property="serviceMode"/>
        <result column="order_status" property="status"/>
        <result column="ctime" property="ctime"/>
        <result column="card_discount" property="cardDiscount"/>
        <result column="abnormal_reason" property="abnormalReason"/>
        <result column="mobile" property="mobile"/>
        <result column="sys_user_id" property="sysUserId"/>
        <result column="refund_result" property="refundResult"/>
        <result column="personal" property="personal"/>
        <result column="abnormal_handle_status" property="abnormalHandleStatus"/>
        <result column="refund_audit_not_pass" property="refundAuditNotPass"/>
    </resultMap>

    <select id="listPage" resultMap="listDto" parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
        select
        b.order_no ,
        b.service_mode_name ,
        b.order_status ,b.pay_time ,b.pay_type ,
        b.amount ,b.sno, b.mac,
        b.user_name ,ifnull(b.launch_area_name,d.launch_area_name) as launch_area_name, b.service_mode_id,
        b.abnormal_reason,b.sys_user_id,b.refund_result,p.personal
        <if test="abnormalHandleStatus != null">
            ,#{abnormalHandleStatus} as abnormal_handle_status
            <!-- 对于已处理的异常订单，统计其对应的所有退款单是否仅有审核不通过状态，如果是，允许前端再次发起退款申请，否则不允许操作 -->
            ,if(count(ra.status <![CDATA[<>]]> 3 or null) > 0, false, true) and if(b.order_status  <![CDATA[=]]> 5, false, true) as refund_audit_not_pass
        </if>
        from order_base b join device d on b.sno = d.sno
        left join order_share_profit p on b.order_no = p.order_no
        <if test="abnormalHandleStatus != null">
          left join refund_apply ra on b.order_no = ra.order_no
        </if>
        <include refid="query"></include>
        group by b.order_no
        order by b.ctime DESC
        <include refid="limit_data"></include>
    </select>

    <select id="appListPage" resultMap="listDto" parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
        select
        b.order_no ,
        b.service_mode_name ,
        b.order_status ,b.pay_time,b.pay_type ,b.ctime,
        b.amount, b.card_discount, b.sno, b.mac,
        b.user_name ,ifnull(b.launch_area_name,d.launch_area_name) as launch_area_name, b.service_mode_id
        from order_base b join device d on b.sno = d.sno
        <include refid="appListQuery"></include>

        order by b.ctime DESC
        <include refid="limit_data"></include>
    </select>

    <select id="findTotalSize" resultType="int" parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
        select count(distinct(b.order_no)) as cnt from order_base b join device d on b.sno = d.sno
        left join order_share_profit p on b.order_no = p.order_no
        <if test="abnormalHandleStatus != null">
            left join refund_apply ra on b.order_no = ra.order_no
        </if>
        <include refid="query"></include>
    </select>

    <select id="countTotalMoney" resultType="java.math.BigDecimal"
            parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
        select sum(NULLIF (b.amount,0)) from order_base b join device d on b.sno = d.sno
        left join order_share_profit p on b.order_no = p.order_no
        <if test="abnormalHandleStatus != null">
            left join refund_apply ra on b.order_no = ra.order_no
        </if>
        <include refid="query"></include>
    </select>

    <select id="findAppListTotalSize" resultType="int" parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
        select count(*) as cnt from order_base b join device d on b.sno = d.sno
        <include refid="appListQuery"></include>
    </select>

    <sql id="query">
        <where>
            <if test="deviceLaunchArea != null and deviceLaunchArea != ''">
                and (b.launch_area_name like concat('%',#{deviceLaunchArea},'%')
                or (b.launch_area_name is null and d.launch_area_name like concat('%',#{deviceLaunchArea},'%')))
            </if>
            <if test="deviceMac != null and deviceMac != ''">
                and b.mac like concat('%',#{deviceMac},'%')
            </if>
            <if test="sno != null and sno != ''">
                and b.sno like concat('%',#{sno},'%')
            </if>
            <if test="userName != null and userName != ''">
                and b.user_name like concat('%',#{userName},'%')
            </if>
            <!-- <if test="personal != null and personal != ''">
                 and p.personal like concat('%',#{personal},'%')
             </if>-->
            <if test="mobile != null and mobile != ''">
                and u.mobile like concat('%',#{mobile},'%')
            </if>
            <if test="userId != null and userId != ''">
                and b.user_id = #{userId}
            </if>
            <if test="orderNo != null and orderNo != ''">
                and b.order_no like concat('%', #{orderNo},'%')
            </if>
            <choose>
                <when test="abnormalHandleStatus != null and abnormalHandleStatus == 0">
                    <!-- 未处理的异常订单包括：状态异常 and 退款申请单为空 -->
                    and b.order_status = -2 and ra.refund_no is null
                </when>
                <when test="abnormalHandleStatus != null and abnormalHandleStatus == 1">
                    <!-- 已处理的异常订单包括：（状态已完成 or 退款申请单不为空）and（异常原因不为空） -->
                    and ((b.order_status = 5 or ra.refund_no is not null) and b.abnormal_reason is not null)
                </when>
                <when test="status != null and status != ''">
                    and b.order_status = #{status}
                </when>
            </choose>
            <if test="deviceLaunchAreaId != null and deviceLaunchAreaId != ''">
                and (b.launch_area_id = #{deviceLaunchAreaId} or (b.launch_area_id is null and d.launch_area_id =
                #{deviceLaunchAreaId}))
            </if>
            <if test="operatorAccountId != null and operatorAccountId != ''">
                and p.share_profit_user = #{operatorAccountId}
            </if>
            <if test="payCardNum != null and payCardNum != ''">
                and b.pay_card_num = #{payCardNum}
            </if>
            <if test="payType != null and payType != ''">
                and b.pay_type = #{payType}
            </if>

            <if test="status != null and status == 5">
                <if test="beginTime != null ">
                    and b.service_end_time <![CDATA[ >= ]]> #{beginTime}
                </if>
                <if test="beginTime != null  and endTime != null">
                    and b.service_end_time  <![CDATA[ <= ]]> #{endTime }
                </if>
            </if>
            <if test=" status == null || status != 5">
                <if test="beginTime != null ">
                    and b.ctime <![CDATA[ >= ]]> #{beginTime}
                </if>
                <if test="beginTime != null  and endTime != null">
                    and b.ctime  <![CDATA[ <= ]]> #{endTime }
                </if>
            </if>

            <if test="currentId != null and currentId != ''">
                and p.share_profit_user = #{currentId}
            </if>
            <if test="ids != null and ids.size() > 0">
                and b.order_no IN
                <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            and b.order_status != -1
        </where>
    </sql>

    <sql id="appListQuery">
        <where>
            <if test="userId != null">
                and b.user_id = #{userId}
            </if>
            <if test="beginTime != null ">
                and b.ctime <![CDATA[ >= ]]> #{beginTime}
            </if>
            <if test="beginTime != null  and endTime != null">
                and b.ctime  <![CDATA[ <= ]]> #{endTime }
            </if>
            <if test="operatorAccountId != null and operatorAccountId != ''">
                and d.owner_id = #{operatorAccountId}
            </if>
            and b.is_deleted=0
        </where>
    </sql>

    <sql id="limit_data">
		limit #{begin},#{pagesize}

	</sql>

    <!-- <select id="countNum" resultType="Integer" parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
         select
         count(*)
         from order_base b join device d on b.mac = d.mac
         <include refid="query"></include>
     </select>
 -->

    <select id="countUsingOrderByUserIdAndProductId" resultType="java.lang.Integer">
        select count(*)
        from order_base o, device d
        where o.sno=d.sno and d.product_id=#{productId} and o.order_status=4 AND o.user_id=#{userId}
	</select>

    <!--  <select id="appListCountNum" resultType="Integer" parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
          select
          count(*)
          from order_base b join device d on b.mac = d.mac
          <include refid="appListQuery"></include>
      </select>-->

    <select id="appListPaySum" resultType="java.lang.Double" parameterType="com.gizwits.lease.order.dto.OrderQueryDto">
        select
        SUM(b.amount)
        from order_base b join device d on b.mac = d.mac
        <include refid="appListQuery"></include>

    </select>

    <select id="earliestOrderTime" resultType="java.util.Date">
        select min(ctime) from order_base
    </select>

    <!--  <select id="findUsingOrderByUserIdAndProductId" resultType="java.lang.Integer">
          select o.*
          from order_base o, device d
          where o.sno=d.sno and d.product_id=#{productId} and o.order_status=4 AND o.user_id=#{userId}
          order by ctime desc limit 1
      </select>-->

    <update id="addRefundMoney">
        update order_base set amount=amount-#{refundMoney},refund=refund+#{refundMoney},refund_version=refund_version+1 where order_no=#{orderNo} and (amount - #{refundMoney} >= 0) and refund_version=#{refundVersion}
    </update>

    <update id="updateAmountByCardDiscount">
        UPDATE order_base SET amount = amount - #{cardDiscount}, card_id = #{cardId}, card_code = #{cardCode}, card_discount = #{cardDiscount} WHERE order_no = #{orderNo} AND card_id IS NULL
    </update>

    <update id="updateByRemovingCardDiscount">
        UPDATE order_base SET card_id = NULL, card_code = NULL,
        amount = amount + card_discount, card_discount = NULL
        WHERE order_no = #{orderNo} AND order_status = -1 AND card_id IS NOT NULL
    </update>

    <select id="selectDeviceLastOrder" resultMap="BaseResultMap">
        SELECT o.* FROM order_base o
        JOIN (SELECT sno, MAX(ctime) AS ctime FROM order_base
        <where>
            <if test="orderStatusList != null and orderStatusList.size() > 0">
                order_status IN
                <foreach item="status" collection="orderStatusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
        </where>
        GROUP BY sno) lo
        ON o.sno = lo.sno AND o.ctime = lo.ctime
        <where>
            <if test="userId != null">
                o.user_id = #{userId}
            </if>
            <if test="snoList != null and snoList.size() != 0">
                AND o.sno IN
                <foreach item="sno" collection="snoList" open="(" separator="," close=")">
                    #{sno}
                </foreach>
            </if>
        </where>
    </select>

    <!-- 更新结算订单的分润批次 -->
    <update id="updateShareProfitBatch">
        UPDATE order_base SET share_profit_batch_id = #{batchId}
        WHERE ctime <![CDATA[ < ]]> #{endTime} AND order_status IN (4, 5)
        AND share_profit_ready = 1 AND share_profit_batch_id IS NULL
    </update>

    <select id="selectByShareProfitBatch" resultType="com.gizwits.lease.order.dto.ServiceOrderAmountDto">
        SELECT order_no AS orderNo, amount FROM order_base WHERE share_profit_batch_id = #{batchId}
    </select>

    <select id="getDiffOwnerId" resultType="int">
        select DISTINCT sys_user_id from order_base
        WHERE sys_user_id IS NOT NULL
        and is_deleted =0
    </select>

</mapper>

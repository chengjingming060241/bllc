<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gizwits.lease.refund.dao.RefundApplyDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.gizwits.lease.refund.entity.RefundApply">
        <id column="refund_no" property="refundNo"/>
        <result column="status" property="status"/>
        <result column="order_no" property="orderNo"/>
        <result column="amount" property="amount"/>
        <result column="path" property="path"/>
        <result column="user_id" property="userId"/>
        <result column="user_mobile" property="userMobile"/>
        <result column="user_alipay_account" property="userAlipayAccount"/>
        <result column="user_alipay_real_name" property="userAlipayRealName"/>
        <result column="refund_reason" property="refundReason"/>
        <result column="audit_reason" property="auditReason"/>
        <result column="auditor_id" property="auditorId"/>
        <result column="audit_time" property="auditTime"/>
        <result column="refunder_id" property="refunderId"/>
        <result column="refund_time" property="refundTime"/>
        <result column="sys_user_id" property="sysUserId"/>
        <result column="ctime" property="ctime"/>
        <result column="utime" property="utime"/>
        <result column="nickname" property="nickname"/>
    </resultMap>

    <select id="checkedStatistics" resultType="com.gizwits.lease.refund.dto.RefundStatisticsDto">
        select count(r.refund_no) as count, SUM(r.amount) as amount
        from refund_apply r
        where refund_no in
        <if test="null!= ids and ids.size() >0">
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>


    <select id="selectPage" resultMap="BaseResultMap" parameterType="com.gizwits.lease.refund.dto.RefundListQueryDto">
        select r.refund_no,r.order_no,r.nickname,r.amount,r.ctime,r.status,r.user_mobile,
        r.path,r.user_id,r.user_mobile,r.refund_reason,r.audit_reason,r.auditor_id,
        r.audit_time,r.refunder_id,r.refund_time,r.sys_user_id,r.ctime,r.utime
        from refund_apply r ,order_base b , order_share_profit p
        where r.order_no = b.order_no and b.order_no = p.order_no
        <include refid="sqlQuery"></include>
        order by r.ctime desc
        limit #{beginPage},#{pageSize}
    </select>

    <select id="selectTotal" resultType="int" parameterType="com.gizwits.lease.refund.dto.RefundListQueryDto">
        select count(distinct(r.order_no)) as cnt
        from refund_apply r ,order_base b , order_share_profit p
        where r.order_no = b.order_no and b.order_no = p.order_no
        <include refid="sqlQuery"></include>
    </select>

    <sql id="sqlQuery">

        <if test="null != currentId and currentId != ''">
            and p.share_profit_user = #{currentId}
        </if>
        <if test="null!= refundNos and refundNos.size() >0">
            and r.refund_no in
            <foreach collection="refundNos" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="mac != null and mac != ''">
            and b.mac like concat('%',#{mac},'%')
        </if>
        <if test="sno != null and sno != '' ">
            and b.sno like concat('%',#{sno},'%')
        </if>
        <if test="orderNo != null and orderNo != ''">
            and r.order_no like concat('%',#{orderNo},'%')
        </if>
        <if test="userMobile != null and userMobile != ''">
            and r.user_mobile like concat('%',#{userMobile},'%')
        </if>
        <if test="launchArea != null and launchArea != ''">
            and b.launch_area_name like concat('%',#{launchArea},'%')
        </if>
        <if test="nickname !=  null and nickname != ''">
            and (r.nickname like concat('%',#{nickname},'%')
            or r.nickname is null and b.user_name like concat('%',#{nickname},'%'))
        </if>
        <if test="startTime != null ">
            and r.ctime <![CDATA[ >= ]]> #{startTime}
        </if>
        <if test="startTime != null  and endTime != null">
            and r.ctime  <![CDATA[ <= ]]> #{endTime }
        </if>
        <if test="status != null and status != ''">
            and r.status = #{status}
        </if>

    </sql>

</mapper>
